
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ASSIGN CLASS CLASS_VAR COLON COMMA DEF DIVIDE DO DOT ELSE END EQ FALSE GLOBAL_VAR GT GTE ID IF INSTANCE_VAR LBRACE LBRACKET LPAREN LT LTE MINUS MINUS_ASSIGN MODULE NEQ NIL NOT NUMBER OR PLUS PLUS_ASSIGN PUTS RBRACE RBRACKET RPAREN SEMICOLON STRING TIMES TRUE WHILEprogram : statement_liststatement_list : statement_list statement\n                      | statementstatement : variable_declaration\n                 | print_statement\n                 | control_structurevariable_declaration : ID ASSIGN expressionprint_statement : PUTS LPAREN argument_list RPAREN\n                       | PUTS STRINGargument_list : argument_list COMMA expression\n                     | expressioncontrol_structure : if_statement\n                         | while_statementif_statement : IF expression statement_list ENDwhile_statement : WHILE expression statement_list ENDexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | NUMBER\n                  | STRING\n                  | ID'
    
_lr_action_items = {'ID':([0,2,3,4,5,6,9,10,11,12,13,14,15,16,17,18,19,20,21,22,25,26,27,28,29,30,31,32,33,34,],[7,7,-3,-4,-5,-6,-12,-13,20,20,-2,20,20,-9,7,-18,-19,-20,7,-7,7,20,20,7,-8,20,-14,-16,-17,-15,]),'PUTS':([0,2,3,4,5,6,9,10,13,16,17,18,19,20,21,22,25,28,29,31,32,33,34,],[8,8,-3,-4,-5,-6,-12,-13,-2,-9,8,-18,-19,-20,8,-7,8,8,-8,-14,-16,-17,-15,]),'IF':([0,2,3,4,5,6,9,10,13,16,17,18,19,20,21,22,25,28,29,31,32,33,34,],[11,11,-3,-4,-5,-6,-12,-13,-2,-9,11,-18,-19,-20,11,-7,11,11,-8,-14,-16,-17,-15,]),'WHILE':([0,2,3,4,5,6,9,10,13,16,17,18,19,20,21,22,25,28,29,31,32,33,34,],[12,12,-3,-4,-5,-6,-12,-13,-2,-9,12,-18,-19,-20,12,-7,12,12,-8,-14,-16,-17,-15,]),'$end':([1,2,3,4,5,6,9,10,13,16,18,19,20,22,29,31,32,33,34,],[0,-1,-3,-4,-5,-6,-12,-13,-2,-9,-18,-19,-20,-7,-8,-14,-16,-17,-15,]),'END':([3,4,5,6,9,10,13,16,18,19,20,22,25,28,29,31,32,33,34,],[-3,-4,-5,-6,-12,-13,-2,-9,-18,-19,-20,-7,31,34,-8,-14,-16,-17,-15,]),'ASSIGN':([7,],[14,]),'LPAREN':([8,],[15,]),'STRING':([8,11,12,14,15,26,27,30,],[16,19,19,19,19,19,19,19,]),'NUMBER':([11,12,14,15,26,27,30,],[18,18,18,18,18,18,18,]),'PLUS':([17,18,19,20,21,22,24,32,33,35,],[26,-18,-19,-20,26,26,26,26,26,26,]),'MINUS':([17,18,19,20,21,22,24,32,33,35,],[27,-18,-19,-20,27,27,27,27,27,27,]),'RPAREN':([18,19,20,23,24,32,33,35,],[-18,-19,-20,29,-11,-16,-17,-10,]),'COMMA':([18,19,20,23,24,32,33,35,],[-18,-19,-20,30,-11,-16,-17,-10,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement_list':([0,17,21,],[2,25,28,]),'statement':([0,2,17,21,25,28,],[3,13,3,3,13,13,]),'variable_declaration':([0,2,17,21,25,28,],[4,4,4,4,4,4,]),'print_statement':([0,2,17,21,25,28,],[5,5,5,5,5,5,]),'control_structure':([0,2,17,21,25,28,],[6,6,6,6,6,6,]),'if_statement':([0,2,17,21,25,28,],[9,9,9,9,9,9,]),'while_statement':([0,2,17,21,25,28,],[10,10,10,10,10,10,]),'expression':([11,12,14,15,26,27,30,],[17,21,22,24,32,33,35,]),'argument_list':([15,],[23,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','analizador_sintactico.py',8),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','analizador_sintactico.py',12),
  ('statement_list -> statement','statement_list',1,'p_statement_list','analizador_sintactico.py',13),
  ('statement -> variable_declaration','statement',1,'p_statement','analizador_sintactico.py',17),
  ('statement -> print_statement','statement',1,'p_statement','analizador_sintactico.py',18),
  ('statement -> control_structure','statement',1,'p_statement','analizador_sintactico.py',19),
  ('variable_declaration -> ID ASSIGN expression','variable_declaration',3,'p_variable_declaration','analizador_sintactico.py',23),
  ('print_statement -> PUTS LPAREN argument_list RPAREN','print_statement',4,'p_print_statement','analizador_sintactico.py',27),
  ('print_statement -> PUTS STRING','print_statement',2,'p_print_statement','analizador_sintactico.py',28),
  ('argument_list -> argument_list COMMA expression','argument_list',3,'p_argument_list','analizador_sintactico.py',32),
  ('argument_list -> expression','argument_list',1,'p_argument_list','analizador_sintactico.py',33),
  ('control_structure -> if_statement','control_structure',1,'p_control_structure','analizador_sintactico.py',37),
  ('control_structure -> while_statement','control_structure',1,'p_control_structure','analizador_sintactico.py',38),
  ('if_statement -> IF expression statement_list END','if_statement',4,'p_if_statement','analizador_sintactico.py',42),
  ('while_statement -> WHILE expression statement_list END','while_statement',4,'p_while_statement','analizador_sintactico.py',46),
  ('expression -> expression PLUS expression','expression',3,'p_expression','analizador_sintactico.py',50),
  ('expression -> expression MINUS expression','expression',3,'p_expression','analizador_sintactico.py',51),
  ('expression -> NUMBER','expression',1,'p_expression','analizador_sintactico.py',52),
  ('expression -> STRING','expression',1,'p_expression','analizador_sintactico.py',53),
  ('expression -> ID','expression',1,'p_expression','analizador_sintactico.py',54),
]
